//Copyright © 2000-2003 by Dmitry A. Sokolyuk
unit UIObject;
{$Define ObjectUniqueId}
{-$Define DebugObject}
{-$Define DebugObjectCreate}
interface
type
  TIObject=class(TObject, IUnknown)
  protected
    FRefCount:Integer;
{$ifdef ObjectUniqueId}
    FObjectUniqueId:Integer;
{$endif}
    {IUnknown}
    function QueryInterface(const IID:TGUID; out Obj):HResult;virtual;stdcall;
    function _AddRef:Integer;virtual;stdcall;
    function _Release:Integer;virtual;stdcall;
  public
    constructor Create;
    destructor Destroy; override;
{$ifdef ObjectUniqueId}
    Property ObjectUniqueId:Integer read FObjectUniqueId;
{$endif}
  end;

implementation
  Uses Windows, UObjectConsts
       {$IfDef DebugObject}, USimpleVarsetTypes, SysUtils{$Ifdef DebugObjectCreate}, ULogFileTypes{$Endif}{$Endif};

constructor TIObject.Create;
{$IfDef DebugObject}
  Var tmpISimpleVarset:ISimpleVarset;
{$Ifdef DebugObjectCreate}
      tmpILogFile:ILogFile;
{$Endif}
{$Endif}
begin
  FRefCount:=0;
  InterLockedIncrement(cnITObjectCreated); //Счетчик объектов
  inherited Create;
{$ifdef ObjectUniqueId}
  FObjectUniqueId:=InterLockedIncrement(CnObjectUniqueId); //Уникальный момер объекта
  if FObjectUniqueId>=2147483600 then CnObjectUniqueId:=-2147483647;{Если будет создаваться каждую мл.сек. хватит на 25 дней}
{$endif}
{$IfDef DebugObject}//Добавляю в список
  tmpISimpleVarset:=glObjectsList;
  if Assigned(tmpISimpleVarset)then begin
    tmpISimpleVarset.ITPush(FObjectUniqueId, FormatDateTime('ddmmyy hh:nn:ss.zzz', Now)+' ThrId='+IntToStr(GetCurrentThreadId)+' '+Self.ClassName);
  end;
{$Ifdef DebugObjectCreate}
  tmpILogFile:=glObjectsListLogFile;
  if Assigned(tmpILogFile) then begin
    tmpILogFile.ITWriteLnToLog('CREATE : ID='+IntToStr(FObjectUniqueId)+#9'ThrId='+IntToStr(GetCurrentThreadId)+#9'ClassName='''+Self.ClassName+'''', True);
  end;
{$Endif}{$Endif}
end;                                                                {Если будет создаваться каждую сек. хватит на 69 лет}

destructor TIObject.Destroy;
//  Comment was generated by AQtime function Profiler at 16:10:26 16.12.2002
//  Hit Count : 19899
//  Time (s) : 0,00984130
//  % Time : 0,00
//  Time with Children (s) : 0,00984130
//  % with Children : 0,00
//  Affected by Trigger : False
//  Max Recursion Depth : 0
{$IfDef DebugObject}
  var tmpISimpleVarset:ISimpleVarset;
{$Ifdef DebugObjectCreate}
      tmpILogFile:ILogFile;
{$Endif}
{$Endif}
begin
  Inherited destroy;  
  InterLockedDecrement(cnITObjectCreated);
{$IfDef DebugObject}
  try
    tmpISimpleVarset:=glObjectsList;
    if assigned(tmpISimpleVarset)then begin
      tmpISimpleVarset.ITClearOfIntIndex(FObjectUniqueId);
    end;
{$Ifdef DebugObjectCreate}
    tmpILogFile:=glObjectsListLogFile;
    if Assigned(tmpILogFile) then begin
      tmpILogFile.ITWriteLnToLog('DESTROY: ID='+IntToStr(FObjectUniqueId)+#9'ClassName='''+Self.ClassName+''''{Type='''+ObjectTypeToStr(FObjectType)+''''}, True);
    end;
{$Endif}
  except end;
{$Endif}
end;

{TITObject.IUnknown}
function TIObject.QueryInterface(const IID:TGUID; out Obj):HResult;
begin
  if GetInterface(IID, Obj) then Result:=S_OK else Result:=E_NOINTERFACE;
end;

function TIObject._AddRef:Integer;
begin
  Result:=InterLockedIncrement(FRefCount);
end;

function TIObject._Release:Integer;
begin
  Result:=InterLockedDecrement(FRefCount);
  if Result=0 then Destroy;
end;

end.
